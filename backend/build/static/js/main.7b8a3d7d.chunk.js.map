{"version":3,"sources":["actions/types.js","Component/Login.js","actions/auth.js","Component/Home.js","reducers/auth.js","reducers/index.js","store.js","App.js","index.js"],"names":["LOGIN_SUCCESS","LOGIN_FAIL","USER_LOAD_SUCCESS","USER_LOAD_FAIL","connect","login","username","password","dispatch","a","config","headers","body","JSON","stringify","axios","post","process","res","type","payload","data","localStorage","getItem","get","useState","formData","setFormData","onChange","e","target","name","value","className","onSubmit","preventDefault","placeholder","onchange","required","minLength","to","Home","Component","initialState","access","refresh","isAuthenticated","user","combineReducers","auth","state","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Login","SignUp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b8a3d7d.chunk.js","sourcesContent":["export const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\nexport const USER_LOAD_SUCCESS = 'USER_LOAD_SUCCESS'\r\nexport const USER_LOAD_FAIL = 'USER_LOAD_FAIL'","import React,{useState} from 'react';\r\nimport {Link, link, Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {login} from '../actions/auth'\r\n\r\n\r\nconst Login =({ login }) =>{\r\n    const [formData, setFormData] = useState({\r\n        username:'',\r\n        password:''\r\n    });\r\n    const {username, password} = formData;\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value});\r\n    const onSubmit = e =>{\r\n        e.preventDefault();\r\n        login(username,password);\r\n\r\n    }\r\n    return(\r\n        <div className='container mt-5'>\r\n            <h1>Sign In</h1>\r\n            <p>Sign into your Account</p>\r\n            <form onSubmit={e=> onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                    className='form-control'\r\n                    type='text'\r\n                    placeholder='username'\r\n                    name='usename'\r\n                    // value={username}\r\n                    onchange={e=> onChange(e)}\r\n                    required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                    className='form-control'\r\n                    type='password'\r\n                    placeholder='password'\r\n                    name='password'\r\n                    // value={password}\r\n                    onchange={e=> onChange(e)}\r\n                    minLength='6'\r\n                    required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary' type='submit'>Login</button>\r\n            </form>\r\n            <p className=\"mt-3\">\r\n                Don't have an Account? <Link to='/Signup'>SignUp</Link>\r\n            </p>\r\n        </div>\r\n    )\r\n};\r\nconst mapStateToProps = dispatch =>({\r\n\r\n})\r\n\r\nexport default connect(null,{ login }) (Login);","import axios from 'axios'\r\nimport{ LOGIN_SUCCESS ,\r\n    LOGIN_FAIL ,\r\n    USER_LOAD_SUCCESS ,\r\n    USER_LOAD_FAIL }\r\n    from './types';\r\nexport const load_user = () => async dispatch => {\r\n    if(localStorage.getItem('access')){\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        }\r\n        try{\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/user/me/`, config)\r\n            dispatch({\r\n                type: USER_LOAD_SUCCESS,\r\n                payload: res.data\r\n            })\r\n        }catch (err){\r\n            dispatch({\r\n                type: USER_LOAD_FAIL\r\n            })\r\n        }\r\n    }else{\r\n        dispatch({\r\n            type: USER_LOAD_FAIL\r\n        })\r\n    }\r\n};\r\nexport const login = (username, password) => async dispatch =>{\r\n    const config = {\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        }\r\n    }\r\n    const body = JSON.stringify({username, password})\r\n    try{\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/blog/login`, body, config)\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        })\r\n        dispatch(load_user())\r\n    }catch (err){\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n    }\r\n\r\n};","import React, { Component } from 'react'\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                this is my home page\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import{ LOGIN_SUCCESS ,\r\n LOGIN_FAIL ,\r\n USER_LOAD_SUCCESS ,\r\n USER_LOAD_FAIL }\r\n from '../actions/types';\r\n\r\n const initialState = {\r\n     access: localStorage.getItem('access'),\r\n     refresh: localStorage.getItem('refresh'),\r\n     isAuthenticated: null,\r\n     user: null\r\n\r\n }\r\n export default function(state = initialState, action){\r\n     const {type, payload} = action;\r\n     switch(type){\r\n         case LOGIN_SUCCESS:\r\n             localStorage.setItem('access',payload.access)\r\n             return{\r\n                 ...state,\r\n                 isAuthenticated: true,\r\n                 access: payload.access,\r\n                 refresh: payload.refresh\r\n             }\r\n        case USER_LOAD_SUCCESS:\r\n            return{\r\n                ...state,\r\n                user:payload\r\n               }\r\n        case USER_LOAD_FAIL:\r\n            return{\r\n                ...state,\r\n                user: null\r\n            }\r\n        case LOGIN_FAIL:\r\n            localStorage.removeItem('access')\r\n            localStorage.removeItem('refresh')\r\n            return{\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user:null\r\n            }\r\n        default:\r\n            return state\r\n     }\r\n }","import {combineReducers} from 'redux'\r\nimport auth from './auth'\r\n\r\nexport default combineReducers({\r\n    auth\r\n})","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","\nimport Login from './Component/Login'\nimport SignUp from './Component/Signup'\nimport Home from './Component/Home'\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/login' component={Login} />\n          <Route exact path='/signup' component={SignUp} />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\n\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}